name: Release

on:
  workflow_call:
    inputs:
      project:
        type: string
        required: true
      os:
        type: string
        required: true
      target:
        type: string
        required: true
      share:
        type: boolean
        default: false
      publish:
        type: boolean
        default: false
    secrets:
      CACHIX_AUTH_TOKEN:
        required: true
      CARGO_REGISTRY_TOKEN:
        required: true

jobs:
  build:
    name: ${{ inputs.target }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=https://github.com/nixos/nixpkgs/archive/nixpkgs-unstable.tar.gz
          enable_kvm: true
          extra_nix_config: experimental-features = nix-command flakes
      - run: nix-shell -p nix-info --run "nix-info -m"
      - uses: cachix/cachix-action@v15
        with:
          name: soywod
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community
      - run: nix build .#cross-${{ inputs.target }}
      - run: cp result/bin/${{ inputs.project }}* .
      - run: chmod u+w ${{ inputs.project }}*
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.project }}-${{ inputs.target }}
          path: ${{ inputs.project }}*
      - run: |
          cp -R result/share .
          chmod -R u+w share
        if: ${{ inputs.share }}
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.share }}
        with:
          name: share
          path: share
      - uses: actions/download-artifact@v4
        if: ${{ !inputs.share && startsWith(github.ref, 'refs/tags/') }}
        with:
          name: share
          path: share
      - run: tar cvzf ${{ inputs.project }}.${{ inputs.target }}.tgz ${{ inputs.project }}* share
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - run: zip -R ${{ inputs.project }}.${{ inputs.target }}.zip ${{ inputs.project }}* share
        if: ${{ startsWith(inputs.target, 'x86_64-windows') }}
      - uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: ${{ inputs.project }}.${{ inputs.target }}.tgz
      - run: nix develop -k CARGO_REGISTRY_TOKEN -c cargo publish --no-verify
        if: ${{ inputs.publish && startsWith(github.ref, 'refs/tags/') }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
